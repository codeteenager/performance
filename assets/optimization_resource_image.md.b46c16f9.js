import{_ as e,c as a,o as n,a as s}from"./app.b59564c6.js";const l="/performance/optimization/76.png",i="/performance/optimization/77.png",f=JSON.parse('{"title":"图片优化","description":"","frontmatter":{},"headers":[{"level":2,"title":"图片格式和应用场景介绍","slug":"图片格式和应用场景介绍","link":"#图片格式和应用场景介绍","children":[{"level":3,"title":"JPEG(Join Photographic Experts Group)","slug":"jpeg-join-photographic-experts-group","link":"#jpeg-join-photographic-experts-group","children":[]},{"level":3,"title":"PNG(Portable Network Graphics)","slug":"png-portable-network-graphics","link":"#png-portable-network-graphics","children":[]},{"level":3,"title":"GIF(Graphics Interchange Format)","slug":"gif-graphics-interchange-format","link":"#gif-graphics-interchange-format","children":[]},{"level":3,"title":"Webp","slug":"webp","link":"#webp","children":[]},{"level":3,"title":"SVG矢量图","slug":"svg矢量图","link":"#svg矢量图","children":[]},{"level":3,"title":"应用场景","slug":"应用场景","link":"#应用场景","children":[]}]},{"level":2,"title":"图片压缩","slug":"图片压缩","link":"#图片压缩","children":[{"level":3,"title":"压缩png","slug":"压缩png","link":"#压缩png","children":[]},{"level":3,"title":"压缩jpg","slug":"压缩jpg","link":"#压缩jpg","children":[]},{"level":3,"title":"压缩gif","slug":"压缩gif","link":"#压缩gif","children":[]},{"level":3,"title":"常用压缩网站","slug":"常用压缩网站","link":"#常用压缩网站","children":[]}]},{"level":2,"title":"响应式图片","slug":"响应式图片","link":"#响应式图片","children":[]},{"level":2,"title":"CSS雪碧图(Image Spriting)","slug":"css雪碧图-image-spriting","link":"#css雪碧图-image-spriting","children":[]},{"level":2,"title":"Image inline","slug":"image-inline","link":"#image-inline","children":[]},{"level":2,"title":"图片服务器自动优化","slug":"图片服务器自动优化","link":"#图片服务器自动优化","children":[]},{"level":2,"title":"案例分析","slug":"案例分析","link":"#案例分析","children":[]}],"relativePath":"optimization/resource/image.md","lastUpdated":1670431153000}'),p={name:"optimization/resource/image.md"},r=s('<h1 id="图片优化" tabindex="-1">图片优化 <a class="header-anchor" href="#图片优化" aria-hidden="true">#</a></h1><h2 id="图片格式和应用场景介绍" tabindex="-1">图片格式和应用场景介绍 <a class="header-anchor" href="#图片格式和应用场景介绍" aria-hidden="true">#</a></h2><p>每种图片格式都有自己的特点，针对不同的业务场景选择不同的图片格式很重要。</p><h3 id="jpeg-join-photographic-experts-group" tabindex="-1">JPEG(Join Photographic Experts Group) <a class="header-anchor" href="#jpeg-join-photographic-experts-group" aria-hidden="true">#</a></h3><p>JPEG是联合图像专家小组针对彩色照片而广泛使用的有损压缩图形格式，压缩率高，它是一个栅格图形，常用文件扩展名为.jpg，也有.jpeg、.jpe。JPEG在互联网上应用于存储和传输照片。</p><p>JPEG不适合线条图形和文字、图标图形，因为它的压缩算法不太适合这类的图形，并且不支持透明度。</p><p>JPEG它非常适合颜色丰富的照片、彩色图、大焦点图、通栏banner图，以及结构不规则的图形。</p><p><img src="'+l+`" alt=""></p><h3 id="png-portable-network-graphics" tabindex="-1">PNG(Portable Network Graphics) <a class="header-anchor" href="#png-portable-network-graphics" aria-hidden="true">#</a></h3><p>便携式网络图形是一种无损压缩的位图图形格式，支持索引、灰度、RGB三种颜色方案以及Alpha通道等特性。PNG是一种栅格图形，最初是作为替代GIF来设计的，能够现实256色，文件比JPEG或GIF大，但是PNG非常好的保留了图像质量。支持Alpha通道的半透明和透明特性，最高支持24位彩色图像(PNG-24)和8位图像(PNG-8)，且浏览器兼容性好。</p><p>PNG由于是无损存储，彩色图像太大，所以JPEG适合的PNG都不适合。</p><p>PNG非常适合纯色、透明、线条绘图、图标， 边缘清晰、有大块相同颜色区域，颜色数较少、但需要半透明的图形。</p><p>png8/png24/png36的区别</p><ul><li>png8是256色，它是支持透明的</li><li>png24是2^24色，它是不支持透明的</li><li>png32是2^24色，它是支持透明的</li></ul><h3 id="gif-graphics-interchange-format" tabindex="-1">GIF(Graphics Interchange Format) <a class="header-anchor" href="#gif-graphics-interchange-format" aria-hidden="true">#</a></h3><p>图像互换格式是一种位图图形文件格式，以8位色(即256种颜色)重现真彩色的图像，采用LZW压缩算法进行编码。</p><p>它是栅格图形，支持256色，仅支持完全透明和完全不透明，如果需要比较通用的动画，GIF是唯一选择。</p><p>由于每个像素只有8比特，所以不适合存储彩色图片。</p><p>它非常适合动画，动的图标。</p><h3 id="webp" tabindex="-1">Webp <a class="header-anchor" href="#webp" aria-hidden="true">#</a></h3><p>Webp是一种现代图像格式，可为图像提供无损压缩和有损压缩，这使得它非常灵活，由Google在购买On2 Technologies后发展出来，以BSD授权条款发布。</p><p>它的优秀算法能同时保证一定程序上的图像质量和比较小的体积，可以插入多帧，实现动画效果。可以设置透明度，采用8位压缩算法，压缩成都更好。无损的Webp比PNG小26%，有损的Webp比JPEG小25-34%，比GIF有更好的动画。</p><p>由于它最多处理256色，所以不适合于彩色图片，且在ios webview中有兼容性问题。</p><p>它非常适用于图形和半透明图像。</p><h3 id="svg矢量图" tabindex="-1">SVG矢量图 <a class="header-anchor" href="#svg矢量图" aria-hidden="true">#</a></h3><p>SVG矢量图就是用svg标签在html中进行相关图像的绘制，它是矢量图，放大缩小不会失真，它的质量很高，代码内嵌的相对较小，现在有很多三方库支持，例如iconfont。尽可能使用SVG矢量图。</p><h3 id="应用场景" tabindex="-1">应用场景 <a class="header-anchor" href="#应用场景" aria-hidden="true">#</a></h3><ul><li>jpg适合于大部分不需要透明图片的业务场景</li><li>png适合于大部分需要透明图片的业务场景</li><li>webp适合于安卓</li><li>svg矢量图适合于图片样式相对简单的业务场景，小icon图标等</li></ul><h2 id="图片压缩" tabindex="-1">图片压缩 <a class="header-anchor" href="#图片压缩" aria-hidden="true">#</a></h2><p>通过在线网站或者工具的方式对图片进行压缩，过程中针对真实图片情况，舍弃一些相对无关紧要的色彩信息，保证大部分是完整的，让图片在人眼中是察觉不到区别的。</p><h3 id="压缩png" tabindex="-1">压缩png <a class="header-anchor" href="#压缩png" aria-hidden="true">#</a></h3><p>采用node-pngquant-native库对其压缩，该库跨平台，压缩比高，压缩png24非常好。</p><h3 id="压缩jpg" tabindex="-1">压缩jpg <a class="header-anchor" href="#压缩jpg" aria-hidden="true">#</a></h3><p>采用jpegtran工具进行压缩，它是支持跨平台，有Linux、Mac、Windows的解决方案。官网地址为：<a href="http://jpegclub.org/jpegtran/" target="_blank" rel="noreferrer">http://jpegclub.org/jpegtran/</a></p><p>安装</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">npm install -g jpegtran</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用方法</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">jpegtran -copy none -optimize -outfile out.jpg in.jpg</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="压缩gif" tabindex="-1">压缩gif <a class="header-anchor" href="#压缩gif" aria-hidden="true">#</a></h3><p>使用Gifsicle来压缩，它主要通过改变每帧比例，减小gif文件大小，同时可以使用透明来达到更小的文件大小，是目前公认的解决方案。地址为：<a href="http://www.lcdf.org/gifsicle/" target="_blank" rel="noreferrer">http://www.lcdf.org/gifsicle/</a></p><p>使用方式：</p><ul><li>优化级别设置不小于2，1的话基本不压缩，gifsicle --optimize=3 -o out.gif in.gif</li><li>将透明部分截去，gifsicle --optimize=3 --crop-transparency -o out.gif in.gif</li></ul><h3 id="常用压缩网站" tabindex="-1">常用压缩网站 <a class="header-anchor" href="#常用压缩网站" aria-hidden="true">#</a></h3><ul><li><a href="https://tinypng.com/" target="_blank" rel="noreferrer">https://tinypng.com/</a></li><li><a href="https://zhitu.isux.us/" target="_blank" rel="noreferrer">https://zhitu.isux.us/</a></li></ul><h2 id="响应式图片" tabindex="-1">响应式图片 <a class="header-anchor" href="#响应式图片" aria-hidden="true">#</a></h2><p>响应式图片指的是在不同的窗口大小，不同的设备中展示不同的图片，可以用以下三种方式实现：</p><ul><li>JavaScript绑定事件检测窗口大小</li><li>CSS媒体查询</li></ul><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">@media</span><span style="color:#A6ACCD;"> screen </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">max-width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">640px</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">    my_image</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">640px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>img标签属性</li></ul><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">srcset</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">img-320w.jpg,img-640w.jpg 2x,img-960w.jpg 3x</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">img_960w.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">alt</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">img</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span><span style="color:#A6ACCD;"> //x描述符表示图像的设备像素比</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="css雪碧图-image-spriting" tabindex="-1">CSS雪碧图(Image Spriting) <a class="header-anchor" href="#css雪碧图-image-spriting" aria-hidden="true">#</a></h2><p>CSS雪碧图是指将网站上用到的图片整合到一张单独的图片中，进而减少网站的HTTP请求数量。现在用雪碧图相对较少，虽然减少网站的请求数量但是，请求的文件资源过大，一次加载非常慢，</p><h2 id="image-inline" tabindex="-1">Image inline <a class="header-anchor" href="#image-inline" aria-hidden="true">#</a></h2><p>使用Data URI代替图片，将图片内容内嵌到html中，从而也减少网站的请求数，例如：base64图片，不需要请求文件内容，直接使用缓存</p><h2 id="图片服务器自动优化" tabindex="-1">图片服务器自动优化 <a class="header-anchor" href="#图片服务器自动优化" aria-hidden="true">#</a></h2><p>图片服务器自动优化是可以在图片URL链接上增加不同特殊参数，服务器自动化生成不同格式、大小、质量、特殊能力的图片。</p><p>处理方式：</p><ol><li>图片裁剪：按长边、短边、填充、拉伸等缩放。</li><li>图片格式转换：支持JPG、GIF、PNG、WebP等格式，支持不同的图片压缩率。</li><li>图片处理：添加图片水印、高斯模糊、重心处理、裁剪边框等。</li><li>AI能力：鉴黄以及智能抠图、智能排班、智能配色、智能合成等AI功能。</li></ol><p>技术实现：</p><ol><li>将图片压缩、图片裁剪、图片格式转换等本地工具部署至线上服务器集群上</li><li>内部运营或外网用户上传本地图片至图片服务器后，服务器默认处理转换成多种图片格式，并推送到图片CDN服务器上。</li><li>图片服务器对外开放多个域名(例如：<a href="http://images1.com" target="_blank" rel="noreferrer">images1.com</a>、images2.com等)，同时对各个业务线开放不同的业务路径(<a href="http://xn--images1-i22ms57k.com/homepage%E7%AD%89" target="_blank" rel="noreferrer">比如images1.com/homepage等</a>)</li><li>外网用户请求带特殊参数的图片URL时，图片服务器根据URL中不同的参数类型，从本地缓存中获取，或者实时对图片进行即时处理，并返回给客户端。</li></ol><h2 id="案例分析" tabindex="-1">案例分析 <a class="header-anchor" href="#案例分析" aria-hidden="true">#</a></h2><p>可以使用chrome devtools中Application去查看请求的图片文件。 <img src="`+i+'" alt=""></p>',62),t=[r];function o(c,h,g,d,u,m){return n(),a("div",null,t)}const D=e(p,[["render",o]]);export{f as __pageData,D as default};
