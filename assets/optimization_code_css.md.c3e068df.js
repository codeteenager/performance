import{_ as e,c as i,o as l,a as s}from"./app.c2dac3e8.js";const p=JSON.parse('{"title":"CSS优化","description":"","frontmatter":{},"headers":[{"level":2,"title":"提升CSS渲染性能","slug":"提升css渲染性能","link":"#提升css渲染性能","children":[]},{"level":2,"title":"合理使用CSS选择器","slug":"合理使用css选择器","link":"#合理使用css选择器","children":[]},{"level":2,"title":"提升CSS文件加载性能","slug":"提升css文件加载性能","link":"#提升css文件加载性能","children":[]},{"level":2,"title":"精简CSS代码","slug":"精简css代码","link":"#精简css代码","children":[]},{"level":2,"title":"合理使用Web Fonts","slug":"合理使用web-fonts","link":"#合理使用web-fonts","children":[]},{"level":2,"title":"CSS动画优化","slug":"css动画优化","link":"#css动画优化","children":[]}],"relativePath":"optimization/code/css.md","lastUpdated":1671034723000}'),a={name:"optimization/code/css.md"},t=s('<h1 id="css优化" tabindex="-1">CSS优化 <a class="header-anchor" href="#css优化" aria-hidden="true">#</a></h1><h2 id="提升css渲染性能" tabindex="-1">提升CSS渲染性能 <a class="header-anchor" href="#提升css渲染性能" aria-hidden="true">#</a></h2><ul><li>谨慎使用expensive属性：例如：nth-child伪类，position:fixed定位</li><li>尽量减少样式层级数：如：<code>div ul li span i{color:blue}</code>层级太多了，使用class即可，减少浏览器对CSS的查询</li><li>尽量避免使用占用过多CPU和内存的属性：如text-indent:-99999px</li><li>尽量避免使用耗电量大的属性：如CSS3 3D transforms、CSS3 transitions、Opacity</li></ul><h2 id="合理使用css选择器" tabindex="-1">合理使用CSS选择器 <a class="header-anchor" href="#合理使用css选择器" aria-hidden="true">#</a></h2><ul><li>尽量避免使用CSS表达式：<code>background-color:expression((new Date()).getHours()%2?&quot;#FFF&quot;:&quot;#000&quot;);</code></li><li>尽量避免使用通配选择器：<code>body&gt;a{font-weight:bold}</code></li><li>尽量避免类正则的属性选择器：<code>*=,|=,^=,$=</code></li></ul><h2 id="提升css文件加载性能" tabindex="-1">提升CSS文件加载性能 <a class="header-anchor" href="#提升css文件加载性能" aria-hidden="true">#</a></h2><ul><li>使用外链的CSS：内联的CSS是在HTML内容中写的，不如外链的好，外链CSS放在CDN上，用户每次访问的时候是有缓存的，减少页面体积大小。</li><li>尽量避免使用@import：@import是在CSS中，CSS加载完后会把@import的CSS文件全部加载完成，这样浏览器才能继续渲染，它会阻塞CSS文件加载过程，也会影响JS加载。</li></ul><h2 id="精简css代码" tabindex="-1">精简CSS代码 <a class="header-anchor" href="#精简css代码" aria-hidden="true">#</a></h2><ul><li>使用缩写语句，margin-top、margin-left统一放在margin中写</li><li>删除不必要的零，比如0.2em携程.2em</li><li>删除不必要的单位，例如px，margin-top:4px删除px</li><li>删除过多分号</li><li>删除空格和注释</li><li>尽量减少样式表的大小</li></ul><h2 id="合理使用web-fonts" tabindex="-1">合理使用Web Fonts <a class="header-anchor" href="#合理使用web-fonts" aria-hidden="true">#</a></h2><ul><li>将字体部署在CDN上，加快用户下载字体的速度</li><li>将字体以base64形式保存在CSS中并通过localstorage进行缓存</li><li>Google字体库因为某些不可抗拒原因，应该使用国内托管服务</li></ul><h2 id="css动画优化" tabindex="-1">CSS动画优化 <a class="header-anchor" href="#css动画优化" aria-hidden="true">#</a></h2><ul><li>尽量避免同时动画：一个用户访问的页面区间中不要有过多的动画，动画太多打乱用户预览网站，同时影响浏览器的性能</li><li>延迟动画初始化：保证让其他css正常渲染，动画延迟一点，比如延迟1秒</li><li>结合SVG，把动画放在SVG中进行展示，其他样式放在CSS中</li></ul>',13),c=[t];function n(o,r,d,S,h,u){return l(),i("div",null,c)}const _=e(a,[["render",n]]);export{p as __pageData,_ as default};
